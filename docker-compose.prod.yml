x-logging: &default-logging
  driver: json-file
  options:
    max-size: "10m"
    max-file: "3"

services:
  redis:
    image: redis:7-alpine
    container_name: the-greatest-redis
    volumes:
      - redis-data:/data
    networks:
      - the-greatest
    command: redis-server --appendonly yes
    logging: *default-logging
    restart: unless-stopped

  web:
    image: ghcr.io/ssherman/the-greatest:latest
    container_name: the-greatest-web
    env_file: .env
    volumes:
      - rails-storage:/rails/storage
      - rails-log:/rails/log
    networks:
      - the-greatest
    depends_on:
      - redis
    logging: *default-logging
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/up"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  worker:
    image: ghcr.io/ssherman/the-greatest:latest
    container_name: the-greatest-worker
    command: bundle exec sidekiq
    env_file: .env
    volumes:
      - rails-storage:/rails/storage
      - rails-log:/rails/log
    networks:
      - the-greatest
    depends_on:
      - redis
      - web
    logging: *default-logging
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "pgrep", "-f", "sidekiq"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  nginx:
    build:
      context: ./deployment/nginx
      dockerfile: Dockerfile
    container_name: the-greatest-nginx
    ports:
      - "80:80"
      - "443:443"
    environment:
      - NGINX_ENVSUBST_OUTPUT_DIR=/etc/nginx/conf.d
      - WEB_HOST=web
      - WEB_PORT=3000
      - CERT_PATH=/etc/letsencrypt/live
      - KEY_PATH=/etc/letsencrypt/live
    volumes:
      - ./deployment/nginx/the-greatest.conf.template:/etc/nginx/templates/the-greatest.conf.template:ro
      - letsencrypt-certs:/etc/letsencrypt:ro
      - letsencrypt-webroot:/var/www/certbot:ro
      - nginx-cache:/var/cache/nginx
    networks:
      - the-greatest
    depends_on:
      - web
    logging: *default-logging
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/up"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

volumes:
  redis-data:
    name: tg_prod_redis_data
  rails-storage:
    name: tg_prod_rails_storage
  rails-log:
    name: tg_prod_rails_log
  letsencrypt-certs:
    name: tg_prod_letsencrypt_certs
  letsencrypt-webroot:
    name: tg_prod_letsencrypt_webroot
  nginx-cache:
    name: tg_prod_nginx_cache

networks:
  the-greatest:
    driver: bridge
